import discord
import random
import logging
import asyncio
import time
import datetime


from discord.ext import commands
from discord.ext.commands import bot

intents = discord.Intents.default()
intents.members=True
client = discord.Client(intents=intents)

client = commands.Bot(command_prefix='.')


@client.event
async def on_ready():
    await client.change_presence(
        status=discord.Status.idle,
        activity=discord.Game('Made by AlienBone#3766'))
    print('Bot is ready!')


@client.command(aliases=['eightball', '8ball'])
async def _8ball(ctx, *, question):
    responses = [
        "It is certain.", "It is decidedly so.", "Without a doubt.",
        "Yes - definitely.", "You may rely on it.", "As I see it, yes.",
        "Most likely.", "Outlook good.", "Yes.", "Signs point to yes.",
        "Reply hazy, try again.", "Ask again later.",
        "Better not tell you now.", "Cannot predict now.",
        "Concentrate and ask again.", "Don't count on it.", "My reply is no.",
        "My sources say no.", "Outlook not so good.", "Very doubtful."
    ]
    await ctx.send(f'Question: {question}\nAnswer: {random.choice(responses)}')


@client.command()
@commands.has_permissions(kick_members = True)
async def clear(ctx, amount=2):
    await ctx.channel.purge(limit=amount)
    await ctx.send(f'i have deleted **{amount}** messages!')
    time.sleep(5)
    await ctx.channel.purge(limit=1)

@client.command()
async def neptune(ctx):
  await ctx.send('hi there :3')

  
@client.command(description="Mutes the specified user.")
@commands.has_permissions(manage_messages=True)
async def mute(ctx, member: discord.Member, *, reason=None):
    guild = ctx.guild
    mutedRole = discord.utils.get(guild.roles, name="Muted")

    if not mutedRole:
        mutedRole = await guild.create_role(name="Muted")

        for channel in guild.channels:
            await channel.set_permissions(mutedRole, speak=False, send_messages=False, read_message_history=True, read_messages=False)
    embed = discord.Embed(title="muted", description=f"{member.mention} was muted ", colour=discord.Colour.light_gray())
    embed.add_field(name="reason:", value=reason, inline=False)
    await ctx.send(embed=embed)
    await member.add_roles(mutedRole, reason=reason)
    await member.send(f" you have been muted from: {guild.name} reason: {reason}")

@client.command(description="Unmutes a specified user.")
@commands.has_permissions(manage_messages=True)
async def unmute(ctx, member: discord.Member):
   mutedRole = discord.utils.get(ctx.guild.roles, name="Muted")

   await member.remove_roles(mutedRole)
   await member.send(f" you have unmutedd from: - {ctx.guild.name}")
   embed = discord.Embed(title="unmute", description=f" unmuted-{member.mention}",colour=discord.Colour.light_gray())
   await ctx.send(embed=embed)



@client.command()
@commands.has_permissions(administrator = True)
async def nuke(ctx):
    await ctx.channel.purge()
    await ctx.send('https://tenor.com/view/nuke-automic-boom-boom-nuked-gif-19961792')
    await ctx.send('this channel has been nuked!')


@client.command()
@commands.has_permissions(kick_members = True)
async def kick(ctx, member: discord.Member, *, reason=None):
    await member.kick(reason=reason)


@client.command()
@commands.has_permissions(ban_members = True)
async def ban(ctx, member: discord.Member, *, reason=None):
    await member.ban(reason=reason)

@client.command()
@commands.has_permissions(ban_members = True)
async def unban(ctx, *, user:discord.User):
    await ctx.guild.unban(user)
    await ctx.send(f"{user} has been unbanned sucessfully")

@client.command()
@commands.has_permissions(ban_members = True)
async def tempban(ctx, user:discord.User, duration: int):
    await ctx.guild.ban(user)
    await ctx.send(f'succesfully banned {user} for a duration of {duration}')
    await asyncio.sleep(duration)
    await ctx.guild.unban(user)

@client.command()
@commands.has_permissions(kick_members = True)
async def tempmute(ctx, member:discord.User, duration: int):
    guild = ctx.guild
    mutedrole = discord.utils.get(guild.roles, name="Muted")

    if not mutedrole:
      mutedRole = await guild.create_role(name="Muted")

      for channel in guild.channels:
        await channel.set_permissions(mutedRole, speak=False, send_messages=False, read_message_history=True, read_messages=False)
    await member.add_roles(mutedrole)
    await member.send(f" you have been muted from: {guild.name}. Duration: {duration} seconds")
    await asyncio.sleep(duration)
    await member.remove_roles(mutedrole)



client.run('yea i ain't leaking my discord bot token L')



